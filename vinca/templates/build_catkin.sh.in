# Generated by vinca http://github.com/RoboStack/vinca.
# DO NOT EDIT!

CATKIN_BUILD_BINARY_PACKAGE="ON"

if [ "${PKG_NAME}" == "ros-@(ros_distro)-catkin" ]; then
    # create catkin cookie to make it is a catkin workspace
    touch $PREFIX/.catkin
    # keep the workspace activation scripts (e.g., local_setup.bat)
    CATKIN_BUILD_BINARY_PACKAGE="OFF"
fi

rm -rf build
mkdir build
cd build

# necessary for correctly linking SIP files (from python_qt_bindings)
export LINK=$CXX

if [[ "$CONDA_BUILD_CROSS_COMPILATION" != "1" ]]; then
  PYTHON_EXECUTABLE=$PREFIX/bin/python
  PKG_CONFIG_EXECUTABLE=$PREFIX/bin/pkg-config
  OSX_DEPLOYMENT_TARGET="10.15"
else
  PYTHON_EXECUTABLE=$BUILD_PREFIX/bin/python
  PKG_CONFIG_EXECUTABLE=$BUILD_PREFIX/bin/pkg-config
  OSX_DEPLOYMENT_TARGET="11.0"
fi

echo "USING PYTHON_EXECUTABLE=${PYTHON_EXECUTABLE}"
echo "USING PKG_CONFIG_EXECUTABLE=${PKG_CONFIG_EXECUTABLE}"

export ROS_PYTHON_VERSION=`$PYTHON_EXECUTABLE -c "import sys; print('%i.%i' % (sys.version_info[0:2]))"`
echo "Using Python $ROS_PYTHON_VERSION"

if [[ $target_platform =~ emscripten.* ]]; then
  export CONDA_BUILD_CROSS_COMPILATION="1"
  
  echo "set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE)"> $SRC_DIR/__vinca_shared_lib_patch.cmake
  echo "set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS \"-s ASSERTIONS=1 -s SIDE_MODULE=1 -sWASM_BIGINT -s USE_PTHREADS=0 -s DEMANGLE_SUPPORT=1 -s ALLOW_MEMORY_GROWTH=1 \")">> $SRC_DIR/__vinca_shared_lib_patch.cmake
  echo "set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS \"-s ASSERTIONS=1 -s SIDE_MODULE=1 -sWASM_BIGINT -s USE_PTHREADS=0 -s DEMANGLE_SUPPORT=1 -s ALLOW_MEMORY_GROWTH=1 \")">> $SRC_DIR/__vinca_shared_lib_patch.cmake
  echo "set(CMAKE_STRIP FALSE)  # used by default in pybind11 on .so modules">> $SRC_DIR/__vinca_shared_lib_patch.cmake
  echo "set(CMAKE_EXE_LINKER_FLAGS \"-sMAIN_MODULE=1 -sASSERTIONS=1 -fexceptions -lembind -sWASM_BIGINT -s USE_PTHREADS=0 -s DEMANGLE_SUPPORT=1 -sALLOW_MEMORY_GROWTH=1 -L$SRC_DIR/build -L$PREFIX/lib\")  # remove SIDE_MODULE from exe linker flags">> $SRC_DIR/__vinca_shared_lib_patch.cmake

  BUILD_SHARED_LIBS="ON"

  if [[ "$PKG_NAME" =~ rosidl-* ]]; then
    # rosidl needs to be build as a shared-lib
    BUILD_SHARED_LIBS="ON"
  fi;

  export EXTRA_CMAKE_ARGS=" \
      -DRMW_IMPLEMENTATION=rmw_wasm_cpp
      -DCMAKE_INSTALL_PREFIX=$PREFIX    \
      -DCMAKE_FIND_ROOT_PATH=$PREFIX    \
      -DAMENT_PREFIX_PATH=$PREFIX       \
      -DPYTHON_INSTALL_DIR=$PREFIX/lib/python3.11 \
      -DBUILD_TESTING=OFF \
      -DCMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_SKIP=True \
      -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS} \
      -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE \
      -DCMAKE_PROJECT_INCLUDE=$SRC_DIR/__vinca_shared_lib_patch.cmake \
    "

   unset -f cmake
   export CMAKE_GEN="emcmake cmake"
   export CMAKE_BLD="cmake"
else
  export EXTRA_CMAKE_ARGS=" \
      -DPYTHON_EXECUTABLE=$PYTHON_EXECUTABLE \
      -DPython_EXECUTABLE=$PYTHON_EXECUTABLE \
      -DPython3_EXECUTABLE=$PYTHON_EXECUTABLE \
      -DPYTHON_INSTALL_DIR=$SP_DIR \
      -DCMAKE_INSTALL_PREFIX=$PREFIX \
      -DCMAKE_PREFIX_PATH=$PREFIX \
      -DAMENT_PREFIX_PATH=$PREFIX \
      -DCMAKE_INSTALL_LIBDIR=lib \
      -DBUILD_SHARED_LIBS=ON \
      -DPKG_CONFIG_EXECUTABLE=$PKG_CONFIG_EXECUTABLE \
    "

   export CMAKE_GEN="cmake"
   export CMAKE_BLD="cmake"
fi;

# see https://github.com/conda-forge/cross-python-feedstock/issues/24
if [[ "$CONDA_BUILD_CROSS_COMPILATION" == "1" ]]; then
  find $PREFIX/lib/cmake -type f -exec sed -i "s~\${_IMPORT_PREFIX}/lib/python$ROS_PYTHON_VERSION/site-packages~$BUILD_PREFIX/lib/python$ROS_PYTHON_VERSION/site-packages~g" {} + || true
  find $PREFIX/share/rosidl* -type f -exec sed -i "s~$PREFIX/lib/python$ROS_PYTHON_VERSION/site-packages~$BUILD_PREFIX/lib/python$ROS_PYTHON_VERSION/site-packages~g" {} + || true
  find $PREFIX/share/rosidl* -type f -exec sed -i "s~\${_IMPORT_PREFIX}/lib/python$ROS_PYTHON_VERSION/site-packages~$BUILD_PREFIX/lib/python$ROS_PYTHON_VERSION/site-packages~g" {} + || true
  find $PREFIX/lib/cmake -type f -exec sed -i "s~message(FATAL_ERROR \"The imported target~message(WARNING \"The imported target~g" {} + || true
  # way around bad CPU type issues
  # rm $PREFIX/bin/doxygen || echo "doxygen not found"
  # rm $PREFIX/bin/dia || echo "dia not found"
  # rm $PREFIX/bin/dot || echo "dot not found"
fi

# NOTE: there might be undefined references occurring
# in the Boost.system library, depending on the C++ versions
# used to compile Boost. We can avoid them by forcing the use of
# the header-only version of the library.
export CXXFLAGS="$CXXFLAGS -DBOOST_ERROR_CODE_HEADER_ONLY"

if [[ $target_platform =~ linux.* ]]; then
    export CFLAGS="$CFLAGS -D__STDC_FORMAT_MACROS=1";
    export CXXFLAGS="$CXXFLAGS -D__STDC_FORMAT_MACROS=1";
    # I am too scared to turn this on for now ...
    # export LDFLAGS="$LDFLAGS -lrt";
    # Some qt stuff uses g++ directly - fix these use cases
    ln -s $GXX $BUILD_PREFIX/bin/g++
fi

export SKIP_TESTING=@(skip_testing)

$CMAKE_GEN \
         -G "Ninja" \
         -DCMAKE_BUILD_TYPE=Release \
         -DCMAKE_NO_SYSTEM_FROM_IMPORTED=ON \
         -DCMAKE_FIND_FRAMEWORK=LAST \
         -DSETUPTOOLS_DEB_LAYOUT=OFF \
         -DCATKIN_SKIP_TESTING=$SKIP_TESTING \
         -DCATKIN_BUILD_BINARY_PACKAGE=$CATKIN_BUILD_BINARY_PACKAGE \
         -DCMAKE_OSX_DEPLOYMENT_TARGET=$OSX_DEPLOYMENT_TARGET \
         $EXTRA_CMAKE_ARGS \
         $SRC_DIR/$PKG_NAME/src/work

$CMAKE_BLD --build . --config Debug --target all

if [[ "$SKIP_TESTING" == "OFF" ]]; then
    $CMAKE_BLD --build . --config Release --target run_tests
fi

$CMAKE_BLD --build . --config Debug --target install

if [ "${PKG_NAME}" == "ros-@(ros_distro)-catkin" ]; then
    # Copy the [de]activate scripts to $PREFIX/etc/conda/[de]activate.d.
    # This will allow them to be run on environment activation.
    for CHANGE in "activate" "deactivate"
    do
        mkdir -p "${PREFIX}/etc/conda/${CHANGE}.d"
        cp "${RECIPE_DIR}/${CHANGE}.sh" "${PREFIX}/etc/conda/${CHANGE}.d/${PKG_NAME}_${CHANGE}.sh"
    done
fi

if [ "${PKG_NAME}" == "ros-@(ros_distro)-environment" ]; then
   for SCRIPT in "1.ros_distro.sh" "1.ros_etc_dir.sh" "1.ros_package_path.sh" "1.ros_python_version.sh" "1.ros_version.sh"
   do
       mkdir -p "${PREFIX}/etc/conda/activate.d"
       cp "${PREFIX}/etc/catkin/profile.d/${SCRIPT}" "${PREFIX}/etc/conda/activate.d/${SCRIPT}"
   done
fi

if [ "${PKG_NAME}" == "ros-@(ros_distro)-ros-workspace" ]; then
    # Copy the [de]activate scripts to $PREFIX/etc/conda/[de]activate.d.
    # This will allow them to be run on environment activation.
    for CHANGE in "activate" "deactivate"
    do
        mkdir -p "${PREFIX}/etc/conda/${CHANGE}.d"
        cp "${RECIPE_DIR}/${CHANGE}.sh" "${PREFIX}/etc/conda/${CHANGE}.d/${PKG_NAME}_${CHANGE}.sh"
    done
fi
